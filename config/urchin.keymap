/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 * 24-12-06 JHS 
 *     - Tab to space
 *     - updating to "Urchin Layout.xlsx"
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define NAV 1
#define SYM 2
#define MIRROR 3
#define NUMBER 4
#define SETTINGS 5
// -----------------

&sk {
    // don't release mods on other mods presses
    ignore-modifiers;
};


/ {
    behaviors {
        // Enables holding the first mod-tap key
        // by performing a tap-release-hold sequence.
        // To use it: "&qt KEYCODE1 KEYCODE2"
        qt: quick_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
		
		// Balanced homerow mods example from zmk.dev
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.
        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";
        // both right thumb keys
        combo_accent {
            timeout-ms = <200>;
            key-positions = <32 33>;
            bindings = <&mo SETTINGS>;
        };
        // both left thumb keys
        combo_settings {
            timeout-ms = <200>;
            key-positions = <30 31>;
            bindings = <&mo SETTINGS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        // Base alpha layer
        default_layer {
            label = "Base";
            bindings = <
            &kp Q  &kp W  &kp E  &kp R  &kp T      &kp Y  &kp U  &kp I  &kp O  &kp P 
            &bhm LGUI A  &bhm LALT S  &bhm LSHIFT D &bhm LCTRL F &kp G     &kp H &bhm RCTRL J  &bhm RSHIFT K  &bhm RALT L &bhm RGUI SEMI
            &kp Z  &kp X  &kp C  &kp V  &kp B      &kp N  &kp M  &kp COMMA &kp DOT &kp SQT
                            &lt MIRROR TAB &lt NUMBER SPACE           &lt NAV RET &sl SYM BSPC
            >;
        };

        // Navigation Layer
        nav_layer {
            label = "Nav.";
            bindings = <
            &trans  &trans  &trans  &trans  &trans      &kp CAPS   &kp PG_UP  &kp UP    &kp INS    &kp ESC
			&trans  &trans  &trans  &trans  &trans      &kp HOME   &kp LEFT   &kp DOWN  &kp RIGHT  &kp END
			&trans  &trans  &trans  &trans  &trans      &kp KP_NUM &kp PG_DN  &kp BSPC  &kp DEL    &trans
			                        &trans  &trans      &trans     &trans
            >;
        };

        // Symbol Layer (LH matches number shift symbols)
        sym_layer {
            label = "Sym.";
            bindings = <
            &kp STAR  &kp MINUS  &kp PLUS  &kp EQUAL  &kp DOT        &trans     &kp PIPE  &kp QMARK  &kp TILDE  &kp GRAVE
			&kp DLLR  &kp HASH   &kp AT    &kp EXCL   &kp RPAR       &kp UNDER  &kp FSLH  &kp LPAR   &kp LBKT   &kp LBRC
			&kp LPAR  &kp STAR   &kp AMPS  &kp CARET  &kp PRCNT      &trans     &kp BSLH  &kp RPAR   &kp RBKT   &kp RBRC
			                                     &trans  &trans      &trans     &trans
            >;
        };

        // Mirrored left hand and numpad values on the right
        mir_layer {
            label = "Mir.";
            bindings = <
            &kp P    &kp O     &kp I   &kp U  &kp Y        &kp KP_PLUS  &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_N0 
            &sk SEMI &sk L     &sk K   &sk J  &kp H        &kp KP_MINUS &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_DOT
            &kp SQT  &kp COMMA &kp DOT &kp M  &kp N        &kp KP_EQUAL &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_MULTIPLY 
                               &trans  &trans              &kp KP_ENTER &trans  
            >;
        };

        // Left Hand Numbers, Right hand function layer
        num_layer {
            label = "Num.";
            bindings = <
            &kp STAR &kp MINUS &kp PLUS &kp EQUAL &kp DOT        &trans  &kp F11 &kp F12 &trans &trans
            &kp 4    &kp 3     &kp 2    &kp 1     &kp 0          &kp F10 &kp F1  &kp F2  &kp F3 &kp F4
            &kp 4    &kp 3     &kp 2    &kp 1     &kp 0          &kp F5  &kp F6  &kp F7  &kp F8 &kp F9
                                        &trans    &trans         &trans  &trans 
            >;
        };

        // Used to change the keyboard's settings.
        set_layer {
                label = "Set.";
                bindings = <
                &none       &none &none      &bt BT_SEL 0 &bt BT_SEL 3        &none &none &none &none    &none 
                &none       &none &bt BT_CLR &bt BT_SEL 1 &bt BT_SEL 4        &none &none &none &none    &none
                &bootloader &none &none      &bt BT_SEL 2 &bt BT_SEL 5        &none &none &none &unstick &bootloader
                                             &none        &none               &none &none 
                >;
        };
    };
};
