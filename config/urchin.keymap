/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 * 24-12-06 JHS 
 *     - Tab to space
 *     - updating to "Urchin Layout.xlsx"
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define NAV 1
#define SYM 2
#define NUMBER 3
#define SETTINGS 4
// -----------------

&sk {
    // don't release mods on other mods presses
    ignore-modifiers;
};


/ {
    behaviors {
        // Enables holding the first mod-tap key
        // by performing a tap-release-hold sequence.
        // To use it: "&qt KEYCODE1 KEYCODE2"
        qt: quick_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
		
		// Balanced homerow mods example from zmk.dev
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.
        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";
        // both right thumb keys
        combo_accent {
            timeout-ms = <100>;
            key-positions = <32 33>;
            bindings = <&mo SETTINGS>;
        };
        // both left thumb keys
        combo_settings {
            timeout-ms = <100>;
            key-positions = <30 31>;
            bindings = <&mo SETTINGS>;
        };
        // TIPLE combo mods
		// 1110 - CONTROL
		// 0111 - SHIFT
		// 1101 - ALT
        combo_lctrl {
            timeout-ms = <50>;
            key-positions = <10 11 12>;
            bindings = <&kp LCTRL>;
        };
        combo_rctrl {
            timeout-ms = <50>;
            key-positions = <19 18 17>;
            bindings = <&kp RCTRL>;
        };
        combo_lshft {
            timeout-ms = <50>;
            key-positions = <11 12 13>;
            bindings = <&kp LSHFT>;
        };
        combo_rshft {
            timeout-ms = <50>;
            key-positions = <18 17 16>;
            bindings = <&kp RSHFT>;
        };
        combo_lalt {
            timeout-ms = <50>;
            key-positions = <10 11 13>;
            bindings = <&kp LALT>;
        };
        combo_ralt {
            timeout-ms = <50>;
            key-positions = <19 18 16>;
            bindings = <&kp RALT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        // Base alpha layer
        default_layer {
            label = "Base";
            bindings = <
            &kp Q  &kp W  &kp F  &kp P  &kp B      &kp J  &kp L  &kp U  &kp Y  &kp SEMI
            &kp A  &kp R  &kp S  &kp T  &kp G      &kp M  &kp N  &kp E  &kp I  &kp O   
            &kp Z  &kp X  &kp C  &kp D  &kp V      &kp K  &kp H  &kp COMMA &kp DOT &kp SQT
               &lt SYM TAB &lt NUMBER SPACE           &lt NAV RET &lt SYM BSPC
            >;
        };
 
        // Navigation Layer
        nav_layer {
            label = "Nav.";
            bindings = <
            &trans   &trans   &trans    &trans    &trans      &kp CAPS   &kp PG_UP  &kp UP    &kp INS    &kp ESC
			&kp LGUI &kp LALT &kp LSHFT &kp LCTRL &trans      &kp HOME   &kp LEFT   &kp DOWN  &kp RIGHT  &kp END
			&trans   &trans   &trans    &trans    &trans      &kp KP_NUM &kp PG_DN  &kp BSPC  &kp DEL    &trans
			                            &trans    &trans      &trans     &trans
            >;
        };

        // Symbol Layer (LH matches number shift symbols)
        sym_layer {
            label = "Sym.";
            bindings = <
            &kp STAR  &kp MINUS  &kp PLUS  &kp EQUAL  &kp DOT        &trans     &kp PIPE  &kp QMARK  &kp TILDE  &kp GRAVE
			&kp DLLR  &kp HASH   &kp AT    &kp EXCL   &kp RPAR       &kp UNDER  &kp FSLH  &kp LPAR   &kp LBKT   &kp LBRC
			&kp LPAR  &kp STAR   &kp AMPS  &kp CARET  &kp PRCNT      &trans     &kp BSLH  &kp RPAR   &kp RBKT   &kp RBRC
			                                     &trans  &trans      &trans     &trans
            >;
        };


        // Left Hand Numbers, Right hand function layer
        num_layer {
            label = "Num.";
            bindings = <
            &kp STAR &kp MINUS &kp PLUS &kp EQUAL &kp DOT        &trans  &kp F11 &kp F12 &trans &trans
            &kp N4   &kp N3    &kp N2   &kp N1    &kp N0         &kp F10 &kp F1  &kp F2  &kp F3 &kp F4
            &kp N9   &kp N8    &kp N7   &kp N6    &kp N5         &kp F5  &kp F6  &kp F7  &kp F8 &kp F9
                                        &trans    &trans         &trans  &trans 
            >;
        };

        // Used to change the keyboard's settings.
        set_layer {
                label = "Set.";
                bindings = <
                &bt BT_CLR  &none    &none     &none     &bt BT_SEL 0     &bt BT_SEL 3 &none     &none     &none       &none 
                &kp LGUI    &kp LALT &kp LSHFT &kp LCTRL &bt BT_SEL 1     &bt BT_SEL 4 &kp RCTRL &kp RSHFT &kp RALT    &kp RGUI
                &bootloader &none    &none     &none     &bt BT_SEL 2     &bt BT_SEL 5 &none     &none     &unstick    &bootloader
                                               &none     &none            &none        &none 
                >;
        };
    };
};
